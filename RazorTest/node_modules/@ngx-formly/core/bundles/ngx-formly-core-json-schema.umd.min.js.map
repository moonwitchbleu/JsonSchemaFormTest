{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@ngx-formly/core/json-schema/formly-json-schema.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","isEmpty","v","undefined","checkField","field","_checkField","isFieldValid","key","formControl","valid","fieldGroup","every","f","FormlyJsonschema","toFieldConfig","schema","options","_toFieldConfig","_this","resolveSchema","type","guessType","defaultValue","default","templateOptions","label","title","readonly","readOnly","description","addValidator","_a","parsers","Number","min","minimum","max","maximum","exclusiveMinimum","exclusiveMaximum","step","multipleOf","schemaType","Array","isArray","includes","forEach","prop","resolveDependencies","propDeps_1","schemaDeps_1","keys","properties","required","indexOf","expressionProperties","templateOptions.required","some","k","hideExpression","oneOf","resolveMultiSchema","anyOf","minItems","maxItems","uniqueItems","from","Set","map","JSON","stringify","items","isEnum","defineProperty","get","itemSchema","additionalItems","enumerable","configurable","const","multiple","toEnumOptions","formlyConfig","reverseDeepMerge","$ref","resolveDefinition","allOf","resolveAllOf","baseSchema","__rest","getOwnPropertySymbols","propertyIsEnumerable","Error","reduce","base","__spread","concat","schemas","subscription","hooks","onInit","anyOfField","parent","findIndex","FormControl","setTimeout","valueChanges","subscribe","clearFieldModel","patchValue","model","onDestroy","unsubscribe","fs","control","split","uri","pointer","definition","def","path","annotation","deps","schemaDeps","dependencies","dependency","dep","name","validator","validators","isConst","enum","toEnum","Injectable","args","providedIn"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { JSONSchema7, JSONSchema7TypeName } from 'json-schema';\nimport { ÉµreverseDeepMerge as reverseDeepMerge } from '@ngx-formly/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nexport interface FormlyJsonschemaOptions {\n  /**\n   * allows to intercept the mapping, taking the already mapped\n   * formly field and the original JSONSchema source from which it\n   * was mapped.\n   */\n  map?: (mappedField: FormlyFieldConfig, mapSource: JSONSchema7) => FormlyFieldConfig;\n}\n\nfunction isEmpty(v: any) {\n  return v === '' || v === undefined || v === null;\n}\n\nfunction clearFieldModel(field: FormlyFieldConfig) {\n  if (field.key) {\n    field.formControl.patchValue(undefined);\n    delete field.model[field.key];\n  } else if (field.fieldGroup) {\n    field.fieldGroup.forEach(f => clearFieldModel(f));\n  }\n}\n\nfunction checkField(field: FormlyFieldConfig) {\n  (field.options as any)._checkField(field);\n}\n\nfunction isFieldValid(field: FormlyFieldConfig): boolean {\n  if (field.key) {\n    return field.formControl.valid;\n  }\n\n  return field.fieldGroup.every(f => isFieldValid(f));\n}\n\ninterface IOptions extends FormlyJsonschemaOptions {\n  schema: JSONSchema7;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyJsonschema {\n  toFieldConfig(schema: JSONSchema7, options?: FormlyJsonschemaOptions): FormlyFieldConfig {\n    return this._toFieldConfig(schema, { schema, ...(options || {}) });\n  }\n\n  private _toFieldConfig(schema: JSONSchema7, options: IOptions): FormlyFieldConfig {\n    schema = this.resolveSchema(schema, options);\n\n    let field: FormlyFieldConfig = {\n      type: this.guessType(schema),\n      defaultValue: schema.default,\n      templateOptions: {\n        label: schema.title,\n        readonly: schema.readOnly,\n        description: schema.description,\n      },\n    };\n\n    switch (field.type) {\n      case 'null': {\n        this.addValidator(field, 'null', ({ value }) => value === null);\n        break;\n      }\n      case 'number':\n      case 'integer': {\n        field.parsers = [v => isEmpty(v) ? null : Number(v)];\n        if (schema.hasOwnProperty('minimum')) {\n          field.templateOptions.min = schema.minimum;\n        }\n\n        if (schema.hasOwnProperty('maximum')) {\n          field.templateOptions.max = schema.maximum;\n        }\n\n        if (schema.hasOwnProperty('exclusiveMinimum')) {\n          field.templateOptions.exclusiveMinimum = schema.exclusiveMinimum;\n          this.addValidator(field, 'exclusiveMinimum', ({ value }) => isEmpty(value) || (value > schema.exclusiveMinimum));\n        }\n\n        if (schema.hasOwnProperty('exclusiveMaximum')) {\n          field.templateOptions.exclusiveMaximum = schema.exclusiveMaximum;\n          this.addValidator(field, 'exclusiveMaximum', ({ value }) => isEmpty(value) || (value < schema.exclusiveMaximum));\n        }\n\n        if (schema.hasOwnProperty('multipleOf')) {\n          field.templateOptions.step = schema.multipleOf;\n          this.addValidator(field, 'multipleOf', ({ value }) => isEmpty(value) || (value % schema.multipleOf === 0));\n        }\n        break;\n      }\n      case 'string': {\n        const schemaType = schema.type as JSONSchema7TypeName;\n        if (Array.isArray(schemaType) && schemaType.includes('null')) {\n          field.parsers = [v => isEmpty(v) ? null : v];\n        }\n\n        ['minLength', 'maxLength', 'pattern'].forEach(prop => {\n          if (schema.hasOwnProperty(prop)) {\n            field.templateOptions[prop] = schema[prop];\n          }\n        });\n        break;\n      }\n      case 'object': {\n        field.fieldGroup = [];\n\n        const [propDeps, schemaDeps] = this.resolveDependencies(schema);\n        Object.keys(schema.properties || {}).forEach(key => {\n          const f = this._toFieldConfig(<JSONSchema7> schema.properties[key], options);\n          field.fieldGroup.push(f);\n          f.key = key;\n          if (Array.isArray(schema.required) && schema.required.indexOf(key) !== -1) {\n            f.templateOptions.required = true;\n          }\n          if (!f.templateOptions.required && propDeps[key]) {\n            f.expressionProperties = {\n              'templateOptions.required': m => m && propDeps[key].some(k => !isEmpty(m[k])),\n            };\n          }\n\n          if (schemaDeps[key]) {\n            field.fieldGroup.push({\n              ...this._toFieldConfig(schemaDeps[key], options),\n              hideExpression: m => !m || isEmpty(m[key]),\n            });\n          }\n        });\n\n        if (schema.oneOf) {\n          field.fieldGroup.push(this.resolveMultiSchema(\n            <JSONSchema7[]> schema.oneOf,\n            options,\n          ));\n        }\n\n        if (schema.anyOf) {\n          field.fieldGroup.push(this.resolveMultiSchema(\n            <JSONSchema7[]> schema.anyOf,\n            options,\n          ));\n        }\n        break;\n      }\n      case 'array': {\n        if (schema.hasOwnProperty('minItems')) {\n          field.templateOptions.minItems = schema.minItems;\n          this.addValidator(field, 'minItems', ({ value }) => isEmpty(value) || (value.length >= schema.minItems));\n        }\n        if (schema.hasOwnProperty('maxItems')) {\n          field.templateOptions.maxItems = schema.maxItems;\n          this.addValidator(field, 'maxItems', ({ value }) => isEmpty(value) || (value.length <= schema.maxItems));\n        }\n        if (schema.hasOwnProperty('uniqueItems')) {\n          field.templateOptions.uniqueItems = schema.uniqueItems;\n          this.addValidator(field, 'uniqueItems', ({ value }) => {\n            if (isEmpty(value) || !schema.uniqueItems) {\n              return true;\n            }\n\n            const uniqueItems = Array.from(\n              new Set(value.map((v: any) => JSON.stringify(v))),\n            );\n\n            return uniqueItems.length === value.length;\n          });\n        }\n\n        // resolve items schema needed for isEnum check\n        if (schema.items && !Array.isArray(schema.items)) {\n          schema.items = this.resolveSchema(<JSONSchema7> schema.items, options);\n        }\n\n        // TODO: remove isEnum check once adding an option to skip extension\n        if (!this.isEnum(schema)) {\n          field.fieldGroup = [];\n          Object.defineProperty(field, 'fieldArray', {\n            get: () => {\n              if (!Array.isArray(schema.items)) {\n                // When items is a single schema, the additionalItems keyword is meaningless, and it should not be used.\n                return this._toFieldConfig(<JSONSchema7> schema.items, options);\n              }\n\n              const itemSchema = schema.items[field.fieldGroup.length]\n                ? schema.items[field.fieldGroup.length]\n                : schema.additionalItems;\n\n              return itemSchema\n                ? this._toFieldConfig(<JSONSchema7> itemSchema, options)\n                : {};\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n\n        break;\n      }\n    }\n\n    if (schema.hasOwnProperty('const')) {\n      field.templateOptions.const = schema.const;\n      this.addValidator(field, 'const', ({ value }) => value === schema.const);\n      if (!field.type) {\n        field.defaultValue = schema.const;\n      }\n    }\n\n    if (this.isEnum(schema)) {\n      field.templateOptions.multiple = field.type === 'array';\n      field.type = 'enum';\n      field.templateOptions.options = this.toEnumOptions(schema);\n    }\n\n    // map in possible formlyConfig options from the widget property\n    if (schema['widget'] && schema['widget'].formlyConfig) {\n      field = reverseDeepMerge(schema['widget'].formlyConfig, field);\n    }\n\n    // if there is a map function passed in, use it to allow the user to\n    // further customize how fields are being mapped\n    return options.map ? options.map(field, schema) : field;\n  }\n\n  private resolveSchema(schema: JSONSchema7, options: IOptions) {\n    if (schema.$ref) {\n      schema = this.resolveDefinition(schema, options);\n    }\n\n    if (schema.allOf) {\n      schema = this.resolveAllOf(schema, options);\n    }\n\n    return schema;\n  }\n\n  private resolveAllOf({ allOf, ...baseSchema }: JSONSchema7, options: IOptions) {\n    if (!allOf.length) {\n      throw Error(`allOf array can not be empty ${allOf}.`);\n    }\n\n    return allOf.reduce((base: JSONSchema7, schema: JSONSchema7) => {\n      schema = this.resolveSchema(schema, options);\n      if (base.required && schema.required) {\n        base.required = [...base.required, ...schema.required];\n      }\n\n      if (schema.uniqueItems) {\n        base.uniqueItems = schema.uniqueItems;\n      }\n\n      // resolve to min value\n      ['maxLength', 'maximum', 'exclusiveMaximum', 'maxItems', 'maxProperties']\n        .forEach(prop => {\n          if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n            base[prop] = base[prop] < schema[prop] ? base[prop] : schema[prop];\n          }\n        });\n\n      // resolve to max value\n      ['minLength', 'minimum', 'exclusiveMinimum', 'minItems', 'minProperties']\n        .forEach(prop => {\n          if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n            base[prop] = base[prop] > schema[prop] ? base[prop] : schema[prop];\n          }\n        });\n\n      return reverseDeepMerge(base, schema);\n    }, baseSchema);\n  }\n\n  private resolveMultiSchema(schemas: JSONSchema7[], options: IOptions): FormlyFieldConfig {\n    let subscription: Subscription = null;\n\n    return {\n      type: 'multischema',\n      fieldGroup: [\n        {\n          type: 'enum',\n          templateOptions: {\n            options: schemas\n              .map((s, i) => ({ label: s.title, value: i })),\n          },\n          hooks: {\n            onInit(f) {\n              const anyOfField = f.parent.fieldGroup[1];\n              const value = anyOfField.fieldGroup.findIndex(isFieldValid);\n              f.formControl = new FormControl(value !== -1 ? value : 0);\n              setTimeout(() => checkField(anyOfField));\n\n              subscription = f.formControl.valueChanges.subscribe(v => {\n                clearFieldModel(anyOfField);\n                checkField(anyOfField);\n              });\n            },\n            onDestroy() {\n              subscription && subscription.unsubscribe();\n            },\n          },\n        },\n        {\n          fieldGroup: schemas.map((s, i) => ({\n            ...this._toFieldConfig(s, options),\n            hideExpression: (m, fs, f) => {\n              const control = f.parent.parent.fieldGroup[0].formControl;\n\n              return !control || control.value !== i;\n            },\n          })),\n        },\n      ],\n    };\n  }\n\n  private resolveDefinition(schema: JSONSchema7, options: IOptions): JSONSchema7 {\n    const [uri, pointer] = schema.$ref.split('#/');\n    if (uri) {\n      throw Error(`Remote schemas for ${schema.$ref} not supported yet.`);\n    }\n\n    const definition = !pointer ? null : pointer.split('/').reduce(\n      (def, path) => def && def.hasOwnProperty(path) ? def[path] : null,\n      options.schema,\n    );\n\n    if (!definition) {\n      throw Error(`Cannot find a definition for ${schema.$ref}.`);\n    }\n\n    if (definition.$ref) {\n      return this.resolveDefinition(definition, options);\n    }\n\n    return {\n      ...definition,\n      ...['title', 'description', 'default'].reduce((annotation, p) => {\n        if (schema.hasOwnProperty(p)) {\n          annotation[p] = schema[p];\n        }\n\n        return annotation;\n      }, {}),\n    };\n  }\n\n  private resolveDependencies(schema: JSONSchema7) {\n    const deps = {};\n    const schemaDeps = {};\n\n    Object.keys(schema.dependencies || {}).forEach(prop => {\n      const dependency = schema.dependencies[prop] as JSONSchema7;\n      if (Array.isArray(dependency)) {\n        // Property dependencies\n        dependency.forEach(dep => {\n          if (!deps[dep]) {\n            deps[dep] = [prop];\n          } else {\n            deps[dep].push(prop);\n          }\n        });\n      } else {\n        // schema dependencies\n        schemaDeps[prop] = dependency;\n      }\n    });\n\n    return [deps, schemaDeps];\n  }\n\n  private guessType(schema: JSONSchema7) {\n    const type = schema.type as JSONSchema7TypeName;\n    if (!type && schema.properties) {\n      return 'object';\n    }\n\n    if (Array.isArray(type)) {\n      if (type.length === 1) {\n        return type[0];\n      }\n\n      if (type.length === 2 && type.includes('null')) {\n        return type[type[0] === 'null' ? 1 : 0];\n      }\n    }\n\n    return type;\n  }\n\n  private addValidator(field: FormlyFieldConfig, name: string, validator: (control: AbstractControl) => boolean) {\n    field.validators = field.validators || {};\n    field.validators[name] = validator;\n  }\n\n  private isEnum(schema: JSONSchema7) {\n    const isConst = (s: JSONSchema7) => s.hasOwnProperty('const') || (s.enum && s.enum.length === 1);\n\n    return schema.enum\n      || (schema.anyOf && schema.anyOf.every(isConst))\n      || (schema.oneOf && schema.oneOf.every(isConst))\n      || schema.uniqueItems && schema.items && !Array.isArray(schema.items) && this.isEnum(<JSONSchema7> schema.items);\n  }\n\n  private toEnumOptions(schema: JSONSchema7) {\n    if (schema.enum) {\n      return schema.enum.map(value => ({ value, label: value }));\n    }\n\n    const toEnum = (s: JSONSchema7) => {\n      const value = s.hasOwnProperty('const') ? s.const : s.enum[0];\n\n      return { value: value, label: s.title || value };\n    };\n\n    if (schema.anyOf) {\n      return schema.anyOf.map(toEnum);\n    }\n\n    if (schema.oneOf) {\n      return schema.oneOf.map(toEnum);\n    }\n\n    return this.toEnumOptions(<JSONSchema7> schema.items);\n  }\n}\n"]}